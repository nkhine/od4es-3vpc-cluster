---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Main stack

Parameters:
  ClassB:
    Description: 'Class B of VPC (10.XXX.0.0/16)'
    Type: Number
    Default: 40
    ConstraintDescription: 'Must be in the range [0-255]'
    MinValue: 0
    MaxValue: 255
  Environment:
    Description: 'Stack environment'
    Type: String
    Default: Production
    AllowedValues:
    - Production
    - Development
  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances
    Default: 'eu-west-2'
  Email:
    Type: String
    Default: 'norman@khine.net'
  MasterInstanceType:
    Description: The EC2 instance type for the master nodes in the cluster
    Type: String
    Default: m5.large
    AllowedValues:
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5a.large
    - m5a.xlarge
    - m5a.2xlarge
    - m5a.4xlarge
    - m5n.large
    - m5n.xlarge
    - m5n.2xlarge
    - m5n.4xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5n.large
    - c5n.xlarge
    - c5n.2xlarge
    - c5n.4xlarge
    - r5.large
    - r5.xlarge
    - r5.2xlarge
    - r5.4xlarge
    - r5a.large
    - r5a.xlarge
    - r5a.2xlarge
    - r5a.4xlarge
    - r5n.large
    - r5n.xlarge
    - r5n.2xlarge
    - r5n.4xlarge
  MasterNodeCount:
    Description: The number of client/kibana nodes to deploy in the cluster
    Type: String
    AllowedPattern: "^(\\d{1,2})"
    Default: '3'
  DataInstanceType:
    Description: The EC2 instance type for the data nodes in the cluster
    Type: String
    Default: m5.large
    AllowedValues:
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5a.large
    - m5a.xlarge
    - m5a.2xlarge
    - m5a.4xlarge
    - m5n.large
    - m5n.xlarge
    - m5n.2xlarge
    - m5n.4xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5n.large
    - c5n.xlarge
    - c5n.2xlarge
    - c5n.4xlarge
    - r5.large
    - r5.xlarge
    - r5.2xlarge
    - r5.4xlarge
    - r5a.large
    - r5a.xlarge
    - r5a.2xlarge
    - r5a.4xlarge
    - r5n.large
    - r5n.xlarge
    - r5n.2xlarge
    - r5n.4xlarge
  DataNodeCount:
    Description: The number of data nodes to deploy in the cluster
    Type: String
    AllowedPattern: "^(\\d{1,2})"
    Default: '3'
  ClientInstanceType:
    Description: The EC2 instance type for the Kibana and client nodes in the cluster
    Type: String
    Default: m5.large
    AllowedValues:
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5a.large
    - m5a.xlarge
    - m5a.2xlarge
    - m5a.4xlarge
    - m5n.large
    - m5n.xlarge
    - m5n.2xlarge
    - m5n.4xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5n.large
    - c5n.xlarge
    - c5n.2xlarge
    - c5n.4xlarge
    - r5.large
    - r5.xlarge
    - r5.2xlarge
    - r5.4xlarge
    - r5a.large
    - r5a.xlarge
    - r5a.2xlarge
    - r5a.4xlarge
    - r5n.large
    - r5n.xlarge
    - r5n.2xlarge
    - r5n.4xlarge
  ClientNodeCount:
    Description: The number of client/kibana nodes to deploy in the cluster
    Type: String
    AllowedPattern: "^(\\d{1,2})"
    Default: '3'

Mappings:
  SSLmapping:
    ssl1:
      Ireland:  'arn:aws:acm:eu-west-1::***'
      London:   'arn:aws:acm:eu-west-2:***'
  AWSRegionsNameMapping:
    eu-west-1:
      RegionName: Ireland
    eu-west-2:
      RegionName: London
Resources:
  Alert:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Email: !Ref Email
      TemplateURL: templates/operations/alert.yaml
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        VPCName: 'ELASTICSEARCH'
        ClassB: !Ref ClassB
        EnvironmentTag: !Ref Environment
      TemplateURL: templates/vpc/vpc-3azs.yaml
  S3GatewayEndpoint:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
      TemplateURL: templates/vpc/vpc-endpoint-s3.yaml
  KMS:s3:PutObject
        ParentAlertStack: !GetAtt Alert.Outputs.StackName
      TemplateURL: templates/security/kms-key.yaml
  ElbAccessLogWriteS3:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        # ParentKmsKeyStack: !GetAtt KMS.Outputs.StackName
        ParentVpcEndpointStack: !GetAtt S3GatewayEndpoint.Outputs.StackName
        Access: ElbAccessLogWrite
      TemplateURL: templates/state/s3.yaml
  SecurityStackName:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
        EnvironmentTag: !Ref Environment
        ClassB: !Ref ClassB
      TemplateURL: templates/security/groups/es.yaml
  SeedInterfaceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: templates/eip.yaml
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
        SecurityStackName: !GetAtt SecurityStackName.Outputs.StackName
  SeedStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: SeedInterfaceStack
    Properties:
      TemplateURL: templates/nodes/seed.yaml
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
        SeedInterfaceStack: !GetAtt SeedInterfaceStack.Outputs.StackName
        KeyName: !Ref KeyName
        MasterInstanceType: !Ref MasterInstanceType

  MasterNodes:
    Type: AWS::CloudFormation::Stack
    DependsOn: SeedStack
    Properties:
      TemplateURL: templates/nodes/master.yaml
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
        SecurityStackName: !GetAtt SecurityStackName.Outputs.StackName
        KeyName: !Ref KeyName
        InstanceType: !Ref MasterInstanceType
        NodeCount: !Ref MasterNodeCount
        VolumeSize: 25

  ClientNodes:
    Type: AWS::CloudFormation::Stack
    DependsOn: SeedStack
    Properties:
      TemplateURL: templates/nodes/client.yaml
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
        ParentS3StackAccessLog: !GetAtt ElbAccessLogWriteS3.Outputs.StackName
        SecurityStackName: !GetAtt SecurityStackName.Outputs.StackName
        KeyName: !Ref KeyName
        InstanceType: !Ref ClientInstanceType
        NodeCount: !Ref ClientNodeCount
        VolumeSize: 25
        CertificateArn: !FindInMap
          - SSLmapping
          - ssl1
          - !FindInMap
            - AWSRegionsNameMapping
            - !Ref 'AWS::Region'
            - RegionName

  DataNodes:
    Type: AWS::CloudFormation::Stack
    DependsOn: SeedStack
    Properties:
      TemplateURL: templates/nodes/data.yaml
      Parameters:
        ParentVPCStack: !GetAtt VPC.Outputs.StackName
        SecurityStackName: !GetAtt SecurityStackName.Outputs.StackName
        KeyName: !Ref KeyName
        InstanceType: !Ref DataInstanceType
        NodeCount: !Ref DataNodeCount
        VolumeSize: 25

Outputs:
  SSHKeyName:
    Description: SSH Key Name.
    Value:
      Ref: KeyName
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-SSHKeyName"
  VpcStack:
    Description: VPC stack name
    Value:
      Fn::GetAtt:
      - VPC
      - Outputs.StackName
  ClientNodesASG:
    Description: AutoScaling group. Examine the instances in this group to get the
      public IPs to connect with Kibana and to send bulk and query API requests.
    Value:
      Fn::GetAtt:
      - ClientNodes
      - Outputs.AutoScalingGroup