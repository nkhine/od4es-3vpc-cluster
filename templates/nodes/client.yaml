---
AWSTemplateFormatVersion: '2010-09-09'
Description: Open Distro for Elasticsearch client node.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentVPCStack
      - SecurityStackName
      - ParentAlertStack
      - ParentS3StackAccessLog
    - Label:
        default: 'Alb Parameters'
      Parameters:
      - NodesELBScheme
    - Label:
        default: 'EC2 Parameters'
      Parameters:
      - KeyName
      - IAMUserSSHAccess
      - PermissionsBoundary
      - ManagedPolicyArns
    - Label:
        default: 'Node Parameters'
      Parameters:
      - InstanceType
      - LogsRetentionInDays
      - VolumeSize
      - RestoreImageId
      - AmazonLinux2Version
      - UserData
      - NodeSubnetsReach
      - NodeEnableMetrics
Parameters:
  ParentVPCStack:
    Description: Name of an active CloudFormation stack that contains the networking
      resources.
    Type: String
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'
    Type: String
    Default: ''
  ParentS3StackAccessLog:
    Description: 'Optional stack name of parent s3 stack based on state/s3.yaml template (with Access set to ElbAccessLogWrite) to store access logs.'
    Type: String
    Default: ''
  SecurityStackName:
    Description: Name of an active CloudFormation stack that contains the security
      resources.
    Type: String
  NodesELBScheme:
    Description: 'Indicates whether the load balancer in front of the ES clients is Internet-facing or internal.'
    Type: String
    Default: 'internet-facing'
    AllowedValues:
    - 'internet-facing'
    - internal
  NodeEnableMetrics:
    Description: 'Should the node have Group Metrics collection enabled?'
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to all the instances for this
      solution
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: ''
  IAMUserSSHAccess:
    Description: 'Synchronize public keys of IAM users to enable personalized SSH access.'
    Type: String
    Default: false
    AllowedValues:
    - true
    - false
  InstanceType:
    Description: The EC2 instance type for the seed node.
    Type: String
    Default: ''
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  RestoreImageId:
    Description: 'Restore from existing Amazon Machine Image (AMI).'
    Type: String
    Default: ''
  AmazonLinux2Version:
    Description: 'Version of Amazon Linux 2 to boot from the first time (ignored if RestoreImageId is set; select the latest version for new stacks; OS updates are enabled to patch the system).'
    Type: String
    Default: '20191217.0'
    AllowedValues: ['20200917.0', '20200722.0', '20200520.1', '20200406.0', '20200304.0', '20200207.1', '20191217.0']
  UserData:
    Description: 'Optional Bash script executed on first instance launch.'
    Type: String
    Default: ''
  ManagedPolicyArns:
    Description: 'Optional comma-delimited list of IAM managed policy ARNs to attach to the instance''s IAM role.'
    Type: String
    Default: ''
  PermissionsBoundary:
    Description: 'Optional ARN for a policy that will be used as the permission boundary for all roles created by this template.'
    Type: String
    Default: ''
  VolumeSize:
    Description: 'The root volume size, in Gibibytes (GiB).'
    Type: Number
    Default: 8
    ConstraintDescription: 'Must be in the range [8-1024]'
    MinValue: 8
    MaxValue: 1024
  NodeSubnetsReach:
    Description: 'Should the node have direct access to the Internet or do you prefer private subnets with NAT?'
    Type: String
    Default: Public
    AllowedValues:
    - Public
    - Private
  NodeCount:
    Description: The number of client/kibana nodes to deploy in the cluster
    Type: String
    AllowedPattern: "^(\\d{1,2})"
    Default: '3'

Mappings:
  VersionMap:
    '20200917.0':
      Map: RegionMap20200917
    '20200722.0':
      Map: RegionMap202007220
    '20200520.1':
      Map: RegionMap202005201
    '20200406.0':
      Map: RegionMap202004060
    '20200304.0':
      Map: RegionMap202003040
    '20200207.1':
      Map: RegionMap202002071
    '20191217.0':
      Map: RegionMap201912170
  RegionMap20200917:
    'af-south-1':
      AMI: 'ami-0cec12e29ebe3f0d5'
    'eu-north-1':
      AMI: 'ami-0653812935d0743fe'
    'ap-south-1':
      AMI: 'ami-0e306788ff2473ccb'
    'eu-west-3':
      AMI: 'ami-0de12f76efe134f2f'
    'eu-west-2':
      AMI: 'ami-0a669382ea0feb73a'
    'eu-south-1':
      AMI: 'ami-0759301b88845d121'
    'eu-west-1':
      AMI: 'ami-0bb3fad3c0286ebd5'
    'ap-northeast-2':
      AMI: 'ami-03b42693dc6a7dc35'
    'me-south-1':
      AMI: 'ami-08155c9ee8b845e35'
    'ap-northeast-1':
      AMI: 'ami-0ce107ae7af2e92b5'
    'sa-east-1':
      AMI: 'ami-02898a1921d38a50b'
    'ca-central-1':
      AMI: 'ami-0c2f25c1f66a1ff4d'
    'ap-east-1':
      AMI: 'ami-814d0ff0'
    'ap-southeast-1':
      AMI: 'ami-015a6758451df3cb9'
    'ap-southeast-2':
      AMI: 'ami-0f96495a064477ffb'
    'eu-central-1':
      AMI: 'ami-00a205cb8e06c3c4e'
    'us-east-1':
      AMI: 'ami-0947d2ba12ee1ff75'
    'us-east-2':
      AMI: 'ami-03657b56516ab7912'
    'us-west-1':
      AMI: 'ami-0e4035ae3f70c400f'
    'us-west-2':
      AMI: 'ami-0528a5175983e7f28'
  RegionMap202007220:
    'af-south-1':
      AMI: 'ami-08c9d9528020000ac'
    'eu-north-1':
      AMI: 'ami-039609244d2810a6b'
    'ap-south-1':
      AMI: 'ami-0ebc1ac48dfd14136'
    'eu-west-3':
      AMI: 'ami-093fa4c538885becf'
    'eu-west-2':
      AMI: 'ami-0a13d44dccf1f5cf6'
    'eu-south-1':
      AMI: 'ami-0533a9871112d2d51'
    'eu-west-1':
      AMI: 'ami-07d9160fa81ccffb5'
    'ap-northeast-2':
      AMI: 'ami-0bd7691bf6470fe9c'
    'me-south-1':
      AMI: 'ami-01f41d49c363da2ad'
    'ap-northeast-1':
      AMI: 'ami-0cc75a8978fbbc969'
    'sa-east-1':
      AMI: 'ami-018ccfb6b4745882a'
    'ca-central-1':
      AMI: 'ami-013d1df4bcea6ba95'
    'ap-east-1':
      AMI: 'ami-47317236'
    'ap-southeast-1':
      AMI: 'ami-0cd31be676780afa7'
    'ap-southeast-2':
      AMI: 'ami-0ded330691a314693'
    'eu-central-1':
      AMI: 'ami-0c115dbd34c69a004'
    'us-east-1':
      AMI: 'ami-02354e95b39ca8dec'
    'us-east-2':
      AMI: 'ami-07c8bc5c1ce9598c3'
    'us-west-1':
      AMI: 'ami-05655c267c89566dd'
    'us-west-2':
      AMI: 'ami-0873b46c45c11058d'
  RegionMap202005201:
    'af-south-1':
      AMI: 'ami-0ec47ddb564d75b64'
    'eu-north-1':
      AMI: 'ami-04697c9bb5d6135a2'
    'ap-south-1':
      AMI: 'ami-0447a12f28fddb066'
    'eu-west-3':
      AMI: 'ami-01c72e187b357583b'
    'eu-west-2':
      AMI: 'ami-032598fcc7e9d1c7a'
    'eu-south-1':
      AMI: 'ami-0f9b9a8cf93d838d0'
    'eu-west-1':
      AMI: 'ami-0ea3405d2d2522162'
    'ap-northeast-2':
      AMI: 'ami-01af223aa7f274198'
    'me-south-1':
      AMI: 'ami-01b31491b74045c0c'
    'ap-northeast-1':
      AMI: 'ami-0a1c2ec61571737db'
    'sa-east-1':
      AMI: 'ami-0477a95397a9154b3'
    'ca-central-1':
      AMI: 'ami-0f75c2980c6a5851d'
    'ap-east-1':
      AMI: 'ami-49bbfa38'
    'ap-southeast-1':
      AMI: 'ami-0615132a0f36d24f4'
    'ap-southeast-2':
      AMI: 'ami-088ff0e3bde7b3fdf'
    'eu-central-1':
      AMI: 'ami-0a02ee601d742e89f'
    'us-east-1':
      AMI: 'ami-09d95fab7fff3776c'
    'us-east-2':
      AMI: 'ami-026dea5602e368e96'
    'us-west-1':
      AMI: 'ami-04e59c05167ea7bd5'
    'us-west-2':
      AMI: 'ami-0e34e7b9ca0ace12d'
  RegionMap202004060:
    'af-south-1':
      AMI: 'ami-0b4a93eff849f20ca'
    'eu-north-1':
      AMI: 'ami-0b7a46b4bd694e8a6'
    'ap-south-1':
      AMI: 'ami-0470e33cd681b2476'
    'eu-west-3':
      AMI: 'ami-00077e3fed5089981'
    'eu-west-2':
      AMI: 'ami-01a6e31ac994bbc09'
    'eu-south-1':
      AMI: 'ami-06db5ba0a09e927c8'
    'eu-west-1':
      AMI: 'ami-06ce3edf0cff21f07'
    'ap-northeast-2':
      AMI: 'ami-01288945bd24ed49a'
    'me-south-1':
      AMI: 'ami-0fde637e0db57a2ab'
    'ap-northeast-1':
      AMI: 'ami-0f310fced6141e627'
    'sa-east-1':
      AMI: 'ami-003449ffb2605a74c'
    'ca-central-1':
      AMI: 'ami-054362537f5132ce2'
    'ap-east-1':
      AMI: 'ami-dd7731ac'
    'ap-southeast-1':
      AMI: 'ami-0ec225b5e01ccb706'
    'ap-southeast-2':
      AMI: 'ami-0970010f37c4f9c8d'
    'eu-central-1':
      AMI: 'ami-076431be05aaf8080'
    'us-east-1':
      AMI: 'ami-0323c3dd2da7fb37d'
    'us-east-2':
      AMI: 'ami-0f7919c33c90f5b58'
    'us-west-1':
      AMI: 'ami-06fcc1f0bc2c8943f'
    'us-west-2':
      AMI: 'ami-0d6621c01e8c2de2c'
  RegionMap202003040:
    'eu-north-1':
      AMI: 'ami-0f630db6194a81ad0'
    'ap-south-1':
      AMI: 'ami-03b5297d565ef30a6'
    'eu-west-3':
      AMI: 'ami-07eda9385feb1e969'
    'eu-west-2':
      AMI: 'ami-0cb790308f7591fa6'
    'eu-west-1':
      AMI: 'ami-04d5cc9b88f9d1d39'
    'ap-northeast-2':
      AMI: 'ami-0db78afd3d150fc18'
    'me-south-1':
      AMI: 'ami-05613911cb72781b8'
    'ap-northeast-1':
      AMI: 'ami-052652af12b58691f'
    'sa-east-1':
      AMI: 'ami-0b032e878a66c3b68'
    'ca-central-1':
      AMI: 'ami-0bf54ac1b628cf143'
    'ap-east-1':
      AMI: 'ami-33a7e042'
    'ap-southeast-1':
      AMI: 'ami-0cbc6aae997c6538a'
    'ap-southeast-2':
      AMI: 'ami-08fdde86b93accf1c'
    'eu-central-1':
      AMI: 'ami-0ec1ba09723e5bfac'
    'us-east-1':
      AMI: 'ami-0fc61db8544a617ed'
    'us-east-2':
      AMI: 'ami-0e01ce4ee18447327'
    'us-west-1':
      AMI: 'ami-09a7fe78668f1e2c0'
    'us-west-2':
      AMI: 'ami-0ce21b51cb31a48b8'
  RegionMap202002071:
    'eu-north-1':
      AMI: 'ami-074a0e4318181e9d9'
    'ap-south-1':
      AMI: 'ami-0d9462a653c34dab7'
    'eu-west-3':
      AMI: 'ami-0fd9bce3a3384b635'
    'eu-west-2':
      AMI: 'ami-0389b2a3c4948b1a0'
    'eu-west-1':
      AMI: 'ami-099a8245f5daa82bf'
    'ap-northeast-2':
      AMI: 'ami-0a93a08544874b3b7'
    'me-south-1':
      AMI: 'ami-0e0e68bcf15b6f5cd'
    'ap-northeast-1':
      AMI: 'ami-0af1df87db7b650f4'
    'sa-east-1':
      AMI: 'ami-080a223be3de0c3b8'
    'ca-central-1':
      AMI: 'ami-00db12b46ef5ebc36'
    'ap-east-1':
      AMI: 'ami-47e4a036'
    'ap-southeast-1':
      AMI: 'ami-0f02b24005e4aec36'
    'ap-southeast-2':
      AMI: 'ami-0f767afb799f45102'
    'eu-central-1':
      AMI: 'ami-0df0e7600ad0913a9'
    'us-east-1':
      AMI: 'ami-0a887e401f7654935'
    'us-east-2':
      AMI: 'ami-0e38b48473ea57778'
    'us-west-1':
      AMI: 'ami-01c94064639c71719'
    'us-west-2':
      AMI: 'ami-0e8c04af2729ff1bb'
  RegionMap201912170:
    'eu-north-1':
      AMI: 'ami-0662eb9b9b8685935'
    'ap-south-1':
      AMI: 'ami-0217a85e28e625474'
    'eu-west-3':
      AMI: 'ami-007fae589fdf6e955'
    'eu-west-2':
      AMI: 'ami-0089b31e09ac3fffc'
    'eu-west-1':
      AMI: 'ami-0713f98de93617bb4'
    'ap-northeast-2':
      AMI: 'ami-0bea7fd38fabe821a'
    'me-south-1':
      AMI: 'ami-05f93aaf03b9bf20c'
    'ap-northeast-1':
      AMI: 'ami-011facbea5ec0363b'
    'sa-east-1':
      AMI: 'ami-09de7b4017733e2af'
    'ca-central-1':
      AMI: 'ami-0a269ca7cc3e3beff'
    'ap-east-1':
      AMI: 'ami-db3d78aa'
    'ap-southeast-1':
      AMI: 'ami-05c64f7b4062b0a21'
    'ap-southeast-2':
      AMI: 'ami-0b8b10b5bf11f3a22'
    'eu-central-1':
      AMI: 'ami-07cda0db070313c52'
    'us-east-1':
      AMI: 'ami-062f7200baf2fa504'
    'us-east-2':
      AMI: 'ami-02ccb28830b645a41'
    'us-west-1':
      AMI: 'ami-03caa3f860895f82e'
    'us-west-2':
      AMI: 'ami-04590e7389a6e577c'

Conditions:
  HasPermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, '']]
  HasS3Bucket: !Not [!Equals [!Ref ParentS3StackAccessLog, '']]
  HasIAMUserSSHAccess: !Equals [!Ref IAMUserSSHAccess, 'true']
  HasRestoreImageId: !Not [!Equals [!Ref RestoreImageId, '']]
  HasManagedPolicyArns: !Not [!Equals [!Ref ManagedPolicyArns, '']]
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
  HasNodeMetrics: !Equals [!Ref NodeEnableMetrics, "true"]
  HasNodesELBSchemeInternal: !Equals [!Ref NodesELBScheme, 'internal']

Resources:
  Logs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
      - !Ref IAMRole
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns: !If [HasManagedPolicyArns, !Split [',', !Ref ManagedPolicyArns], !Ref 'AWS::NoValue']
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundary, !Ref 'AWS::NoValue']
      Policies:
      - PolicyName: ssm
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'ssmmessages:*' # SSM Agent by https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-messageAPIs.html
            - 'ssm:UpdateInstanceInformation' # SSM agent by https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-messageAPIs.html
            - 'ec2messages:*' # SSM Session Manager by https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-messageAPIs.html
            - 'ssm:GetDeployablePatchSnapshotForInstance'
            - 'ssm:ListAssociations'
            Resource: '*'
          - Effect: Allow
            Action: 's3:GetObject'
            Resource:
            - !Sub 'arn:${AWS::Partition}:s3:::aws-ssm-${AWS::Region}/*'
            - !Sub 'arn:${AWS::Partition}:s3:::patch-baseline-snapshot-${AWS::Region}/*'
      - PolicyName: cloudwatch
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: 'cloudwatch:PutMetricData'
            Resource: '*'
            Condition:
              StringEquals:
                'cloudwatch:namespace': !Ref 'AWS::StackName'
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogStreams'
            - 'logs:DescribeLogGroups'
            Resource: !GetAtt 'Logs.Arn'

  IAMPolicySSHAccess:
    Type: 'AWS::IAM::Policy'
    Condition: HasIAMUserSSHAccess
    Properties:
      Roles:
      - !Ref IAMRole
      PolicyName: iam
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - 'iam:ListUsers'
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - 'iam:ListSSHPublicKeys'
          - 'iam:GetSSHPublicKey'
          Resource:
          - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'

  NodesLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-client-lt
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt 'InstanceProfile.Arn'
        InstanceType:
          Ref: InstanceType
        ImageId: !If [HasRestoreImageId, !Ref RestoreImageId, !FindInMap [!FindInMap [VersionMap, !Ref AmazonLinux2Version, Map], !Ref 'AWS::Region', AMI]]
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            Groups:
            - Fn::ImportValue:
                Fn::Sub: "${SecurityStackName}-NodesSecurityGroup"
            DeviceIndex: 0
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref VolumeSize
              VolumeType: gp2
        KeyName:
          Ref: KeyName
        UserData:
          'Fn::Base64': !Sub |
            #!/bin/bash -ex
            trap '/opt/aws/bin/cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource NodesLT' ERR
            ${UserData}
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource NodesLT
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region} --resource NodesASG
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
          - cloudwatch
          - corretto
          - install-corretto
          - download-rpms
          - install-odfe
          - yml
          - start-odfe
          - config
        cloudwatch:
          packages:
            rpm:
              cloudwatch: 'https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm'
          files:
            '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json': # https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-Configuration-File-Details.html
              content: !Sub |
                {
                  "logs": {
                    "logs_collected": {
                      "files": {
                        "collect_list": [{
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/amazon/amazon-cloudwatch-agent/amazon-cloudwatch-agent.log",
                           "log_stream_name": "{instance_id}/var/log/amazon/amazon-cloudwatch-agent/amazon-cloudwatch-agent.log",
                           "timestamp_format": "%Y-%m-%dT%H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/amazon/amazon-cloudwatch-agent/configuration-validation.log",
                           "log_stream_name": "{instance_id}/var/log/amazon/amazon-cloudwatch-agent/configuration-validation.log",
                           "timestamp_format": "%Y/%m/%d %H:%M:%S"
                        }, {
                          "log_group_name": "${Logs}",
                          "file_path": "/var/log/amazon/ssm/amazon-ssm-agent.log",
                          "log_stream_name": "{instance_id}/var/log/amazon/ssm/amazon-ssm-agent.log",
                          "timestamp_format": "%Y-%m-%d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/amazon/ssm/errors.log",
                           "log_stream_name": "{instance_id}/var/log/amazon/ssm/errors.log",
                           "timestamp_format": "%Y-%m-%d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/audit/audit.log",
                           "log_stream_name": "{instance_id}/var/log/audit/audit.log"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/boot.log",
                           "log_stream_name": "{instance_id}/var/log/boot.log"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cfn-hup.log",
                           "log_stream_name": "{instance_id}/var/log/cfn-hup.log",
                           "timestamp_format": "%Y-%m-%d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cfn-init-cmd.log",
                           "log_stream_name": "{instance_id}/var/log/cfn-init-cmd.log",
                           "timestamp_format": "%Y-%m-%d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cfn-init.log",
                           "log_stream_name": "{instance_id}/var/log/cfn-init.log",
                           "timestamp_format": "%Y-%m-%d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cfn-wire.log",
                           "log_stream_name": "{instance_id}/var/log/cfn-wire.log",
                           "timestamp_format": "%Y-%m-%d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cloud-init-output.log",
                           "log_stream_name": "{instance_id}/var/log/cloud-init-output.log"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cloud-init.log",
                           "log_stream_name": "{instance_id}/var/log/cloud-init.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/cron",
                           "log_stream_name": "{instance_id}/var/log/cron",
                           "timestamp_format": "%b %-d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/dmesg",
                           "log_stream_name": "{instance_id}/var/log/dmesg"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/grubby_prune_debug",
                           "log_stream_name": "{instance_id}/var/log/grubby_prune_debug"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/maillog",
                           "log_stream_name": "{instance_id}/var/log/maillog",
                           "timestamp_format": "%b %-d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/messages",
                           "log_stream_name": "{instance_id}/var/log/messages",
                           "timestamp_format": "%b %-d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/secure",
                           "log_stream_name": "{instance_id}/var/log/secure",
                           "timestamp_format": "%b %-d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/yum.log",
                           "log_stream_name": "{instance_id}/var/log/yum.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/elasticsearch/od4es.log",
                           "log_stream_name": "{instance_id}/var/log/elasticsearch/od4es.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/elasticsearch/gc.log",
                           "log_stream_name": "{instance_id}/var/log/elasticsearch/gc.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/elasticsearch/od4es_deprecation.log",
                           "log_stream_name": "{instance_id}/var/log/elasticsearch/od4es_deprecation.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/elasticsearch/od4es_index_indexing_slowlog.log",
                           "log_stream_name": "{instance_id}/var/log/elasticsearch/od4es_index_indexing_slowlog.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }, {
                           "log_group_name": "${Logs}",
                           "file_path": "/var/log/elasticsearch/od4es_index_search_slowlog.log",
                           "log_stream_name": "{instance_id}/var/log/elasticsearch/od4es_index_search_slowlog.log",
                           "timestamp_format": "%b %d %H:%M:%S"
                        }]
                      }
                    }
                  },
                  "metrics": {
                    "namespace": "${AWS::StackName}",
                    "append_dimensions": {
                      "InstanceId": "${!aws:InstanceId}"
                    },
                    "metrics_collected": {
                      "mem": {
                        "measurement": [
                          "mem_used_percent"
                        ]
                      },
                      "swap": {
                        "measurement": [
                          "swap_used_percent"
                        ]
                      },
                      "disk": {
                        "resources": [
                          "/"
                        ],
                        "measurement": [
                          "used_percent"
                        ],
                        "drop_device": true
                      }
                    }
                  }
                }
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              'amazon-cloudwatch-agent':
                enabled: true
                ensureRunning: true
                files:
                - '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json'
                packages:
                - cloudwatch
        corretto:
          commands:
            010-public-signing-key:
              command: |-
                rpm --import https://yum.corretto.aws/corretto.key
            020-enable-corretto16:
              command: 'curl -L -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo'
        install-corretto:
          packages:
            yum:
              'java-16-amazon-corretto-devel': []
        download-rpms:
          commands:
            030-get-key:
              command: curl https://d3g5vo6xdbdb9a.cloudfront.net/yum/opendistroforelasticsearch-artifacts.repo -o /etc/yum.repos.d/opendistroforelasticsearch-artifacts.repo
            040-download-es-oss:
              command: curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.10.2-x86_64.rpm
            050-install-es-oss:
              command: yes | rpm -i elasticsearch-oss-7.10.2-x86_64.rpm
        install-odfe:
          commands:
            060-apt-update:
              command: yum -y update
            070-install-odfe:
              command: yum install -y opendistroforelasticsearch-1.13.1
            071-install-kibana:
              command: yum install -y opendistroforelasticsearch-kibana
        yml:
          files:
            "/etc/elasticsearch/elasticsearch.yml":
              content:
                Fn::Join:
                - ''
                - - 'cluster.name: od4es

                    '
                  - 'node.name: client-node

                    '
                  - 'path.data: /var/lib/elasticsearch

                    '
                  - 'path.logs: /var/log/elasticsearch

                    '
                  - 'network.host: 0.0.0.0

                    '
                  - 'node.data: false

                    '
                  - 'node.ingest: false

                    '
                  - 'node.master: false

                    '
                  - "###############################################################\n"
                  - "### Note: this IP is hard-coded for this instance from the\n"
                  - "### CloudFormation template. This instance is manually deployed\n"
                  - "### into public subnet 0 at IP address <prefix>.0.101 via the
                    \n"
                  - "### SeedNetworkInterface resource in the template.\n"
                  - 'discovery.seed_hosts: ["'
                  - Fn::ImportValue:
                      Fn::Sub: "${ParentVPCStack}-SeedEipPrivateIpAddress"
                  - "\"]\n"
                  - "###############################################################\n"
                  - "### Note: this IP is hard-coded for this instance from the\n"
                  - "### CloudFormation template. This instance is manually deployed\n"
                  - "### into public subnet 0 at IP address <prefix>.0.101 via the
                    \n"
                  - "### SeedNetworkInterface resource in the template.\n"
                  - 'cluster.initial_master_nodes: ["'
                  - Fn::ImportValue:
                      Fn::Sub: "${ParentVPCStack}-SeedEipPrivateIpAddress"
                  - "\"]\n"
                  - "\n"
                  - 'opendistro_security.ssl.transport.pemcert_filepath: esnode.pem

                    '
                  - 'opendistro_security.ssl.transport.pemkey_filepath: esnode-key.pem

                    '
                  - 'opendistro_security.ssl.transport.pemtrustedcas_filepath: root-ca.pem

                    '
                  - 'opendistro_security.ssl.transport.enforce_hostname_verification:
                    false

                    '
                  - 'opendistro_security.ssl.http.enabled: true

                    '
                  - 'opendistro_security.ssl.http.pemcert_filepath: esnode.pem

                    '
                  - 'opendistro_security.ssl.http.pemkey_filepath: esnode-key.pem

                    '
                  - 'opendistro_security.ssl.http.pemtrustedcas_filepath: root-ca.pem

                    '
                  - 'opendistro_security.allow_unsafe_democertificates: true

                    '
                  - 'opendistro_security.allow_default_init_securityindex: true

                    '
                  - 'opendistro_security.authcz.admin_dn:

                    '
                  - "  - CN=kirk,OU=client,O=client,L=test, C=de\n"
                  - "\n"
                  - 'opendistro_security.audit.type: internal_elasticsearch

                    '
                  - 'opendistro_security.enable_snapshot_restore_privilege: true

                    '
                  - 'opendistro_security.check_snapshot_restore_write_privileges:
                    true

                    '
                  - 'opendistro_security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]

                    '
                  - 'cluster.routing.allocation.disk.threshold_enabled: false

                    '
                  - 'node.max_local_storage_nodes: 3

                    '
              mode: '000644'
              owner: root
              group: root
            "/etc/kibana/kibana.yml":
              content:
                Fn::Join:
                - ''
                - - 'elasticsearch.hosts: ["https://localhost:9200"]

                    '
                  - 'server.host: 0.0.0.0

                    '
                  - 'elasticsearch.ssl.verificationMode: none

                    '
                  - 'elasticsearch.username: kibanaserver

                    '
                  - 'elasticsearch.password: kibanaserver

                    '
                  - 'elasticsearch.requestHeadersWhitelist: ["securitytenant","Authorization"]

                    '
                  - "\n"
                  - 'opendistro_security.multitenancy.enabled: true

                    '
                  - 'opendistro_security.multitenancy.tenants.preferred: ["Private",
                    "Global"]

                    '
                  - 'opendistro_security.readonly_mode.roles: ["kibana_read_only"]

                    '
              mode: '000644'
              owner: root
              group: root
        start-odfe:
          commands:
            010-name-uniquify:
              command: 'sed -i "s/node.name: client-node/node.name: client-$(uuidgen
                | cut -d - -f 1)/" /etc/elasticsearch/elasticsearch.yml'
            020-enable_elasticsearch:
              command: systemctl enable elasticsearch.service
            030-start_elasticsearch:
              command: systemctl start elasticsearch.service
            040-enable_kibana:
              command: systemctl enable kibana.service
            050-start_kibana:
              command: systemctl start kibana.service

        config:
          files:
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.SeedLC.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=ClientNodesLT
                runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                - '/etc/cfn/cfn-hup.conf'
                - '/etc/cfn/hooks.d/cfn-auto-reloader.conf'
              amazon-ssm-agent:
                enabled: true
                ensureRunning: true

  NodesASG:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      MinSize:
        Ref: NodeCount
      MaxSize:
        Ref: NodeCount
      DesiredCapacity:
        Ref: NodeCount
      # HealthCheckGracePeriod: 900
      # HealthCheckType: EC2
      LaunchTemplate:
        LaunchTemplateId: !Ref NodesLT
        Version: !GetAtt NodesLT.LatestVersionNumber
      NotificationConfigurations: !If
      - HasAlertTopic
      - - NotificationTypes:
          - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
          - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
          TopicARN: {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      - []
      VPCZoneIdentifier:
      - Fn::ImportValue:
          Fn::Sub: '${ParentVPCStack}-SubnetAPublic'
      - Fn::ImportValue:
          Fn::Sub: '${ParentVPCStack}-SubnetBPublic'
      - Fn::ImportValue:
          Fn::Sub: '${ParentVPCStack}-SubnetCPublic'
      Tags:
      - Key: Name
        Value: 'client-node'
        PropagateAtLaunch: true
      MetricsCollection:
        - Fn::If:
          - HasNodeMetrics
          - Granularity: 1Minute
          - !Ref 'AWS::NoValue'
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT10M
        SuspendProcesses:
        - HealthCheck
        - ReplaceUnhealthy
        - AZRebalance
        - AlarmNotification
        - ScheduledActions
        WaitOnResourceSignals: true

  NodesALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      LoadBalancerAttributes:
      - Key: 'idle_timeout.timeout_seconds'
        Value: !Ref NodesLoadBalancerIdleTimeout
      - Key: 'routing.http2.enabled'
        Value: 'true'
      - Key: 'access_logs.s3.enabled'
        Value: !If [HasS3Bucket, 'true', 'false']
      - !If [HasS3Bucket, {Key: 'access_logs.s3.prefix', Value: !Ref 'AWS::StackName'}, !Ref 'AWS::NoValue']
      - !If [HasS3Bucket, {Key: 'access_logs.s3.bucket', Value: {'Fn::ImportValue': !Sub '${ParentS3StackAccessLog}-BucketName'}}, !Ref 'AWS::NoValue']
      Scheme: !Ref NodesELBScheme
      SecurityGroups:
      - !Ref NodesALBSG
      Subnets: !If
      - HasNodesELBSchemeInternal
      - - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPrivate'}
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetBPrivate'}
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetCPrivate'}
      - - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPublic'}
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetBPublic'}
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetCPublic'}
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - Fn::ImportValue:
                Fn::Sub: "${ParentVPCStack}-EnvTag"
            - "-od4es-alb"

  # Alarms
  CPUTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Master average CPU utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/EC2'
      MetricName: CPUUtilization
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref NodesASG
Outputs:
  AutoScalingGroup:
    Description: Client nodes autoscaling group.
    Value:
      Ref: NodesASG
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ClientNodesASG"